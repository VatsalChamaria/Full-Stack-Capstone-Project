(Csharp)

[ApiController]
[Route("api/[controller]")]
public class ProjectsController : ControllerBase
{
    private readonly SkillSnapContext _context;
    public ProjectsController(SkillSnapContext context)
    {
        _context = context;
    }

    [HttpGet]
    public async Task<ActionResult<IEnumerable<Project>>> GetProjects()
    {
        return await _context.Projects.ToListAsync();
    }

    [HttpPost]
    public async Task<ActionResult<Project>> AddProject(Project project)
    {
        _context.Projects.Add(project);
        await _context.SaveChangesAsync();
        return CreatedAtAction(nameof(GetProjects), new { id = project.Id }, project);
    }
}


(Blazor Server Setup)

public class ProjectService
{
    private readonly HttpClient _http;
    public ProjectService(HttpClient http)
    {
        _http = http;
    }

    public async Task<List<Project>> GetProjectsAsync()
    {
        return await _http.GetFromJsonAsync<List<Project>>("api/projects");
    }

    public async Task AddProjectAsync(Project project)
    {
        await _http.PostAsJsonAsync("api/projects", project);
    }
}

(Razor)

@if (projects == null)
{
    <p>Loading projects...</p>
}
else
{
    <ul>
        @foreach (var project in projects)
        {
            <li>@project.Title â€“ @project.Description</li>
        }
    </ul>
}

